plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
}

group = 'de.fu-berlin.mi.hcc.innovonto.utils'
version = '0.0.1-SNAPSHOT'

sourceCompatibility = '11'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.apache.commons:commons-lang3:3.10'
    implementation 'org.junit.jupiter:junit-jupiter:5.5.2'
    implementation 'org.slf4j:slf4j-api:1.7.30'

    testImplementation 'org.assertj:assertj-core:3.15.0'
    testImplementation 'org.slf4j:slf4j-simple:1.7.30'
    testImplementation 'org.mockito:mockito-core:2.+'
}

publishing {
    repositories {
        maven {
            name = 'OSSRH'
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username = ossrhUsername
                password = ossrhPassword
                //username = project.hasProperty('ossrhPassword') ? project.property('ossrhPassword') : ''
                //username = project.hasProperty('osshrUsername') ? project.property('osshrUsername') : ''
            }
        }
    }
    publications {
        mavenJava(MavenPublication) {
            from components.java
            pom {
                name = 'Innovonto Batch-Manager'
                description = 'A java library to allocate batches to crowdsourcing workers'
                url = 'https://github.com/FUB-HCC/Innovonto-Utils'
                licenses {
                    license {
                        name = 'GNU AFFERO GENERAL PUBLIC LICENSE Version 3'
                        url = 'https://www.gnu.org/licenses/agpl-3.0.en.html'
                    }
                }

                developers {
                    developer {
                        id = 'mackeprm'
                        name = 'Maximilian Mackeprang'
                        email = 'maximilian.mackeprang@fu-berlin.de'
                    }
                }

                scm {
                    connection = 'git@github.com:FUB-HCC/Innovonto-Utils.git'
                    developerConnection = 'git@github.com:FUB-HCC/Innovonto-Utils.git'
                    url = 'https://github.com/FUB-HCC/Innovonto-Utils'
                }

            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

test {
    useJUnitPlatform()
}

java {
    withJavadocJar()
    withSourcesJar()
}
